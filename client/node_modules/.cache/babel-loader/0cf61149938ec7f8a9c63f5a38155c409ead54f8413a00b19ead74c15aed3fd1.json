{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\PersonalWebsite\\\\personal-site\\\\src\\\\component\\\\CodingPage\\\\CodingPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CodingPage() {\n  _s();\n  const [repos, setRepos] = useState([]);\n  const [readmeData, setReadmeData] = useState({});\n  useEffect(() => {\n    axios.get(\"https://api.github.com/users/mstyles1/repos\").then(response => {\n      const repos = response.data;\n      setRepos(repos);\n\n      // Fetch README for each repository\n      repos.forEach(repo => {\n        axios.get(`https://api.github.com/repos/mstyles1/${repo.name}/readme`).then(readmeResponse => {\n          const readmeContent = atob(readmeResponse.data.content); // Decode base64 content\n          setReadmeData(prev => ({\n            ...prev,\n            [repo.id]: readmeContent // Store readme content by repo id\n          }));\n        }).catch(error => console.error(`Error fetching README for ${repo.name}:`, error));\n      });\n    }).catch(error => console.error(\"Error fetching repos:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coding-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"coding-header\",\n      children: \"GitHub Portfolio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"repo-list\",\n      children: repos.map(repo => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"repo-item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"repo-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: repo.html_url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"repo-link\",\n            children: repo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"repo-description\",\n            children: readmeData[repo.id] ? readmeData[repo.id] : 'No README available for this repository.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, repo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(CodingPage, \"ntIlXVV5m9sRy5G1C5nI6o6XxeE=\");\n_c = CodingPage;\nvar _c;\n$RefreshReg$(_c, \"CodingPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","CodingPage","_s","repos","setRepos","readmeData","setReadmeData","get","then","response","data","forEach","repo","name","readmeResponse","readmeContent","atob","content","prev","id","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","href","html_url","target","rel","_c","$RefreshReg$"],"sources":["C:/workspace/PersonalWebsite/personal-site/src/component/CodingPage/CodingPage.js"],"sourcesContent":["import React from 'react'\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function CodingPage() {\r\n  const [repos, setRepos] = useState([]);\r\n  const [readmeData, setReadmeData] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios.get(\"https://api.github.com/users/mstyles1/repos\")\r\n      .then(response => {\r\n        const repos = response.data;\r\n        setRepos(repos);\r\n\r\n        // Fetch README for each repository\r\n        repos.forEach(repo => {\r\n          axios.get(`https://api.github.com/repos/mstyles1/${repo.name}/readme`)\r\n            .then(readmeResponse => {\r\n              const readmeContent = atob(readmeResponse.data.content); // Decode base64 content\r\n              setReadmeData(prev => ({\r\n                ...prev,\r\n                [repo.id]: readmeContent // Store readme content by repo id\r\n              }));\r\n            })\r\n            .catch(error => console.error(`Error fetching README for ${repo.name}:`, error));\r\n        });\r\n      })\r\n      .catch(error => console.error(\"Error fetching repos:\", error));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"coding-container\">\r\n      <h2 className=\"coding-header\">GitHub Portfolio</h2>\r\n      <ul className=\"repo-list\">\r\n        {repos.map(repo => (\r\n          <li key={repo.id} className=\"repo-item\">\r\n            <div className=\"repo-info\">\r\n              <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"repo-link\">\r\n                {repo.name}\r\n              </a>\r\n              <p className=\"repo-description\">\r\n                {readmeData[repo.id] ? readmeData[repo.id] : 'No README available for this repository.'}\r\n              </p>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}