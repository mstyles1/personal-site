{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\PersonalWebsite\\\\personal-site\\\\src\\\\component\\\\CodingPage\\\\CodingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CodingPage() {\n  _s();\n  const [repos, setRepos] = useState([]);\n\n  // Hardcoded data for the repositories (you can modify this to match your repos)\n  const repoDetails = {\n    \"Cat-Adoption-Website-Sample\": {\n      photo: \"../images/kitten-adoption.jpg\",\n      // Replace with your actual photo URL\n      description: \"A sample website for potential cat owners.\"\n    },\n    \"Genuine-Gifs-Sample-Work\": {\n      photo: \"../images/Gif-searcher.png\",\n      // Replace with your actual photo URL\n      description: \"A sample GIF search engine.\"\n    },\n    \"Skate-Trivia-Sample\": {\n      photo: \"../images/skater-quiz.png\",\n      // Replace with your actual photo URL\n      description: \"A sample quiz for skate trivia.\"\n    },\n    \"Todo-List-Sample\": {\n      photo: \"../images/todo-list.png\",\n      // Replace with your actual photo URL\n      description: \"A sample Todo-List maker.\"\n    }\n  };\n  useEffect(() => {\n    axios.get(\"https://api.github.com/users/mstyles1/repos\").then(response => {\n      const repos = response.data;\n      setRepos(repos);\n    }).catch(error => console.error(\"Error fetching repos:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coding-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://github.com/mstyles1/\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"coding-header\",\n        children: \"GitHub Portfolio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"repo-list\",\n      children: repos.map(repo => {\n        const details = repoDetails[repo.name]; // Get the hardcoded details for the repo\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"repo-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"repo-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: repo.html_url,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              className: \"repo-link\",\n              children: repo.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), details ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: details.photo,\n                alt: repo.name,\n                className: \"repo-photo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"repo-description\",\n                children: details.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"repo-description\",\n              children: \"No description available for this repository.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, repo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(CodingPage, \"MjoYu6hBopKic+0fWGhxckzxf9A=\");\n_c = CodingPage;\nvar _c;\n$RefreshReg$(_c, \"CodingPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","CodingPage","_s","repos","setRepos","repoDetails","photo","description","get","then","response","data","catch","error","console","className","children","href","target","rel","fileName","_jsxFileName","lineNumber","columnNumber","map","repo","details","name","html_url","src","alt","id","_c","$RefreshReg$"],"sources":["C:/workspace/PersonalWebsite/personal-site/src/component/CodingPage/CodingPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function CodingPage() {\r\n  const [repos, setRepos] = useState([]);\r\n\r\n  // Hardcoded data for the repositories (you can modify this to match your repos)\r\n  const repoDetails = {\r\n    \"Cat-Adoption-Website-Sample\": {\r\n      photo: \"../images/kitten-adoption.jpg\", // Replace with your actual photo URL\r\n      description: \"A sample website for potential cat owners.\"\r\n    },\r\n    \"Genuine-Gifs-Sample-Work\": {\r\n      photo: \"../images/Gif-searcher.png\", // Replace with your actual photo URL\r\n      description: \"A sample GIF search engine.\"\r\n    },\r\n    \"Skate-Trivia-Sample\": {\r\n      photo: \"../images/skater-quiz.png\", // Replace with your actual photo URL\r\n      description: \"A sample quiz for skate trivia.\"\r\n    },\r\n    \"Todo-List-Sample\": {\r\n      photo: \"../images/todo-list.png\", // Replace with your actual photo URL\r\n      description: \"A sample Todo-List maker.\"\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get(\"https://api.github.com/users/mstyles1/repos\")\r\n      .then(response => {\r\n        const repos = response.data;\r\n        setRepos(repos);\r\n      })\r\n      .catch(error => console.error(\"Error fetching repos:\", error));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"coding-container\">\r\n      <a href=\"https://github.com/mstyles1/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n      <h2 className=\"coding-header\">GitHub Portfolio</h2>\r\n      </a>\r\n      <ul className=\"repo-list\">\r\n        {repos.map(repo => {\r\n          const details = repoDetails[repo.name]; // Get the hardcoded details for the repo\r\n          return (\r\n            <li key={repo.id} className=\"repo-item\">\r\n              <div className=\"repo-info\">\r\n                <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\" className=\"repo-link\">\r\n                  {repo.name}\r\n                </a>\r\n                {details ? (\r\n                  <>\r\n                    <img src={details.photo} alt={repo.name} className=\"repo-photo\" />\r\n                    <p className=\"repo-description\">{details.description}</p>\r\n                  </>\r\n                ) : (\r\n                  <p className=\"repo-description\">No description available for this repository.</p>\r\n                )}\r\n              </div>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMU,WAAW,GAAG;IAClB,6BAA6B,EAAE;MAC7BC,KAAK,EAAE,+BAA+B;MAAE;MACxCC,WAAW,EAAE;IACf,CAAC;IACD,0BAA0B,EAAE;MAC1BD,KAAK,EAAE,4BAA4B;MAAE;MACrCC,WAAW,EAAE;IACf,CAAC;IACD,qBAAqB,EAAE;MACrBD,KAAK,EAAE,2BAA2B;MAAE;MACpCC,WAAW,EAAE;IACf,CAAC;IACD,kBAAkB,EAAE;MAClBD,KAAK,EAAE,yBAAyB;MAAE;MAClCC,WAAW,EAAE;IACf;EACF,CAAC;EAEDb,SAAS,CAAC,MAAM;IACdE,KAAK,CAACY,GAAG,CAAC,6CAA6C,CAAC,CACrDC,IAAI,CAACC,QAAQ,IAAI;MAChB,MAAMP,KAAK,GAAGO,QAAQ,CAACC,IAAI;MAC3BP,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,CAAC,CACDS,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA;IAAKiB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BlB,OAAA;MAAGmB,IAAI,EAAC,8BAA8B;MAACC,MAAM,EAAC,QAAQ;MAACC,GAAG,EAAC,qBAAqB;MAAAH,QAAA,eAChFlB,OAAA;QAAIiB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAgB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACJzB,OAAA;MAAIiB,SAAS,EAAC,WAAW;MAAAC,QAAA,EACtBb,KAAK,CAACqB,GAAG,CAACC,IAAI,IAAI;QACjB,MAAMC,OAAO,GAAGrB,WAAW,CAACoB,IAAI,CAACE,IAAI,CAAC,CAAC,CAAC;QACxC,oBACE7B,OAAA;UAAkBiB,SAAS,EAAC,WAAW;UAAAC,QAAA,eACrClB,OAAA;YAAKiB,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBlB,OAAA;cAAGmB,IAAI,EAAEQ,IAAI,CAACG,QAAS;cAACV,MAAM,EAAC,QAAQ;cAACC,GAAG,EAAC,qBAAqB;cAACJ,SAAS,EAAC,WAAW;cAAAC,QAAA,EACpFS,IAAI,CAACE;YAAI;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC,EACHG,OAAO,gBACN5B,OAAA,CAAAE,SAAA;cAAAgB,QAAA,gBACElB,OAAA;gBAAK+B,GAAG,EAAEH,OAAO,CAACpB,KAAM;gBAACwB,GAAG,EAAEL,IAAI,CAACE,IAAK;gBAACZ,SAAS,EAAC;cAAY;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAClEzB,OAAA;gBAAGiB,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,EAAEU,OAAO,CAACnB;cAAW;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA,eACzD,CAAC,gBAEHzB,OAAA;cAAGiB,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAAC;YAA6C;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CACjF;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC,GAbCE,IAAI,CAACM,EAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAcZ,CAAC;MAET,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACrB,EAAA,CA7DuBD,UAAU;AAAA+B,EAAA,GAAV/B,UAAU;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}